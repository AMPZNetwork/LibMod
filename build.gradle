def getCommitTimestampSeconds() {
    // Run 'git log' command to get the timestamp of the latest commit
    def result = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'log', '-1', '--format=%ct'
        standardOutput = result
    }

    // Convert the timestamp to minutes
    def timestampSeconds = result.toString().trim().toLong()

    return timestampSeconds
}

allprojects {
    apply plugin: 'idea'

    ext {
        prefix = rootProject.name.equals('LibMod') ? '' : ':LibMod'
    }
}

subprojects {
    apply plugin: 'java-library'

    group = 'com.ampznetwork.libmod'
    version = "0.1.${getCommitTimestampSeconds()}"

    compileJava.options.encoding = 'UTF-8'

    sourceCompatibility = 21
    targetCompatibility = 21

    repositories {
        maven { url 'https://maven.comroid.org' }
        maven { url 'https://repo.opencollab.dev/maven-releases/' }
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        if (project.name != 'japi') {
            if (findProject(":japi") != null)
                api project(":japi")
            else api 'org.comroid:japi:+'
        }

        if (project.name != 'api' && !project.name.startsWith('compile'))
            api project("$prefix:api")
        if (project.name != 'api' && project.name != 'core' && !project.name.startsWith('compile'))
            api project("$prefix:core")

        // soft dependencies
        compileOnly 'net.luckperms:api:5.4'

        // utility
        api 'org.slf4j:slf4j-api:2.0.+'
        compileOnly 'org.projectlombok:lombok:+'
        annotationProcessor 'org.projectlombok:lombok:+'

        // tests
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
        testImplementation 'org.easymock:easymock:+'
    }

    test {
        useJUnitPlatform()
    }
}
